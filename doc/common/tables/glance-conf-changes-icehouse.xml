<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glance-conf-changes-icehouse">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options for glance</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>enable_v1_registry = True</td>
      <td>(BoolOpt) Deploy the v1 OpenStack Registry API.</td>
    </tr>
    <tr>
      <td>enable_v2_registry = True</td>
      <td>(BoolOpt) Deploy the v2 OpenStack Registry API.</td>
    </tr>
    <tr>
      <td>filesystem_store_datadirs = None</td>
      <td>(MultiStrOpt) List of directories and its priorities to which the Filesystem backend store writes images.</td>
    </tr>
    <tr>
      <td>image_location_quota = 10</td>
      <td>(IntOpt) Maximum number of locations allowed on an image. Negative values evaluate to unlimited.</td>
    </tr>
    <tr>
      <td>image_member_quota = 128</td>
      <td>(IntOpt) Maximum number of image members per image. Negative values evaluate to unlimited.</td>
    </tr>
    <tr>
      <td>image_property_quota = 128</td>
      <td>(IntOpt) Maximum number of properties allowed on an image. Negative values evaluate to unlimited.</td>
    </tr>
    <tr>
      <td>image_tag_quota = 128</td>
      <td>(IntOpt) Maximum number of tags allowed on an image. Negative values evaluate to unlimited.</td>
    </tr>
    <tr>
      <td>location_strategy = location_order</td>
      <td>(StrOpt) This value sets what strategy will be used to determine the image location order. Currently two strategies are packaged with Glance 'location_order' and 'store_type'.</td>
    </tr>
    <tr>
      <td>log_config_append = None</td>
      <td>(StrOpt) The name of logging configuration file. It does not disable existing loggers, but just appends specified logging configuration to any other existing logging options. Please see the Python logging module documentation for details on logging configuration files.</td>
    </tr>
    <tr>
      <td>max_header_line = 16384</td>
      <td>(IntOpt) Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those generated by the Keystone v3 API with big service catalogs</td>
    </tr>
    <tr>
      <td>property_protection_rule_format = roles</td>
      <td>(StrOpt) This config value indicates whether "roles" or "policies" are used in the property protection file.</td>
    </tr>
    <tr>
      <td>swift_store_retry_get_count = 0</td>
      <td>(IntOpt) The number of times a Swift download will be retried before the request fails.</td>
    </tr>
    <tr>
      <td>use_syslog_rfc_format = False</td>
      <td>(BoolOpt) (Optional) Use syslog rfc5424 format for logging. If enabled, will add APP-NAME (RFC5424) before the MSG part of the syslog message.  The old format without APP-NAME is deprecated in I, and will be removed in J.</td>
    </tr>
    <tr>
      <td>vmware_api_insecure = False</td>
      <td>(BoolOpt) Allow to perform insecure SSL requests to ESX/VC.</td>
    </tr>
    <tr>
      <td>vmware_api_retry_count = 10</td>
      <td>(IntOpt) Number of times VMware ESX/VC server API must be retried upon connection related issues.</td>
    </tr>
    <tr>
      <td>vmware_datacenter_path = ha-datacenter</td>
      <td>(StrOpt) Inventory path to a datacenter. If the vmware_server_host specified is an ESX/ESXi, the vmware_datacenter_path is optional. If specified, it should be "ha-datacenter".</td>
    </tr>
    <tr>
      <td>vmware_datastore_name = None</td>
      <td>(StrOpt) Datastore associated with the datacenter.</td>
    </tr>
    <tr>
      <td>vmware_server_host = None</td>
      <td>(StrOpt) ESX/ESXi or vCenter Server target system. The server value can be an IP address or a DNS name.</td>
    </tr>
    <tr>
      <td>vmware_server_password = None</td>
      <td>(StrOpt) Password for authenticating with VMware ESX/VC server.</td>
    </tr>
    <tr>
      <td>vmware_server_username = None</td>
      <td>(StrOpt) Username for authenticating with VMware ESX/VC server.</td>
    </tr>
    <tr>
      <td>vmware_store_image_dir = /openstack_glance</td>
      <td>(StrOpt) The name of the directory where the glance images will be stored in the VMware datastore.</td>
    </tr>
    <tr>
      <td>vmware_task_poll_interval = 5</td>
      <td>(IntOpt) The interval used for polling remote tasks invoked on VMware ESX/VC server.</td>
    </tr>
    <tr>
      <td>database/backend = sqlalchemy</td>
      <td>(StrOpt) The backend to use for db</td>
    </tr>
    <tr>
      <td>database/connection = None</td>
      <td>(StrOpt) The SQLAlchemy connection string used to connect to the database</td>
    </tr>
    <tr>
      <td>database/connection_debug = 0</td>
      <td>(IntOpt) Verbosity of SQL debugging information. 0=None, 100=Everything</td>
    </tr>
    <tr>
      <td>database/connection_trace = False</td>
      <td>(BoolOpt) Add python stack traces to SQL as comment strings</td>
    </tr>
    <tr>
      <td>database/db_inc_retry_interval = True</td>
      <td>(BoolOpt) Whether to increase interval between db connection retries, up to db_max_retry_interval</td>
    </tr>
    <tr>
      <td>database/db_max_retries = 20</td>
      <td>(IntOpt) maximum db connection retries before error is raised. (setting -1 implies an infinite retry count)</td>
    </tr>
    <tr>
      <td>database/db_max_retry_interval = 10</td>
      <td>(IntOpt) max seconds between db connection retries, if db_inc_retry_interval is enabled</td>
    </tr>
    <tr>
      <td>database/db_retry_interval = 1</td>
      <td>(IntOpt) seconds between db connection retries</td>
    </tr>
    <tr>
      <td>database/idle_timeout = 3600</td>
      <td>(IntOpt) Timeout before idle sql connections are reaped</td>
    </tr>
    <tr>
      <td>database/max_overflow = None</td>
      <td>(IntOpt) If set, use this value for max_overflow with sqlalchemy</td>
    </tr>
    <tr>
      <td>database/max_pool_size = None</td>
      <td>(IntOpt) Maximum number of SQL connections to keep open in a pool</td>
    </tr>
    <tr>
      <td>database/max_retries = 10</td>
      <td>(IntOpt) Maximum db connection retries during startup. (setting -1 implies an infinite retry count)</td>
    </tr>
    <tr>
      <td>database/min_pool_size = 1</td>
      <td>(IntOpt) Minimum number of SQL connections to keep open in a pool</td>
    </tr>
    <tr>
      <td>database/mysql_sql_mode = TRADITIONAL</td>
      <td>(StrOpt) The SQL mode to be used for MySQL sessions. This option, including the default, overrides any server-set SQL mode. To use whatever SQL mode is set by the server configuration, set this to no value. Example: mysql_sql_mode=</td>
    </tr>
    <tr>
      <td>database/pool_timeout = None</td>
      <td>(IntOpt) If set, use this value for pool_timeout with sqlalchemy</td>
    </tr>
    <tr>
      <td>database/retry_interval = 10</td>
      <td>(IntOpt) Interval between retries of opening a sql connection</td>
    </tr>
    <tr>
      <td>database/sqlite_db = glance.sqlite</td>
      <td>(StrOpt) The file name to use with SQLite</td>
    </tr>
    <tr>
      <td>database/sqlite_synchronous = True</td>
      <td>(BoolOpt) If True, SQLite uses synchronous mode</td>
    </tr>
    <tr>
      <td>database/use_db_reconnect = False</td>
      <td>(BoolOpt) Enable the experimental use of database reconnect on connection lost</td>
    </tr>
    <tr>
      <td>image_format/container_formats = ['ami', 'ari', 'aki', 'bare', 'ovf', 'ova']</td>
      <td>(ListOpt) Supported values for the 'container_format' image attribute</td>
    </tr>
    <tr>
      <td>image_format/disk_formats = ['ami', 'ari', 'aki', 'vhd', 'vmdk', 'raw', 'qcow2', 'vdi', 'iso']</td>
      <td>(ListOpt) Supported values for the 'disk_format' image attribute</td>
    </tr>
    <tr>
      <td>store_type_location_strategy/store_type_preference = []</td>
      <td>(ListOpt) The store names to use to get store preference order. The name must be registered by one of the stores defined by the 'known_stores' config option. This option will be applied when you using 'store_type' option as image location strategy defined by the 'location_strategy' config option.</td>
    </tr>
    <tr>
      <td>task/task_time_to_live = 48</td>
      <td>(IntOpt) Time in hours for which a task lives after, either succeeding or failing</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>default_log_levels</td>
      <td>amqplib=WARN, sqlalchemy=WARN, boto=WARN, suds=INFO, keystone=INFO, eventlet.wsgi.server=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN, requests.packages.urllib3.connectionpool=WARN</td>
    </tr>
    <tr>
      <td>known_stores</td>
      <td>glance.store.filesystem.Store, glance.store.http.Store, glance.store.rbd.Store, glance.store.s3.Store, glance.store.swift.Store, glance.store.sheepdog.Store, glance.store.cinder.Store</td>
      <td>glance.store.filesystem.Store, glance.store.http.Store</td>
    </tr>
    <tr>
      <td>logging_context_format_string</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s</td>
    </tr>
    <tr>
      <td>qpid_port</td>
      <td>5672</td>
      <td>5672</td>
    </tr>
    <tr>
      <td>rbd_store_ceph_conf</td>
      <td></td>
      <td>/etc/ceph/ceph.conf</td>
    </tr>
    <tr>
      <td>rbd_store_chunk_size</td>
      <td>4</td>
      <td>8</td>
    </tr>
    <tr>
      <td>rbd_store_pool</td>
      <td>rbd</td>
      <td>images</td>
    </tr>
    <tr>
      <td>sheepdog_store_port</td>
      <td>7000</td>
      <td>7000</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>rabbit_durable_queues</td>
      <td>amqp_durable_queues</td>
    </tr>
    <tr>
      <td>disk_formats</td>
      <td>image_format/disk_formats</td>
    </tr>
    <tr>
      <td>log_config</td>
      <td>log_config_append</td>
    </tr>
    <tr>
      <td>sql_connection</td>
      <td>database/connection</td>
    </tr>
    <tr>
      <td>sql_max_retries</td>
      <td>database/max_retries</td>
    </tr>
    <tr>
      <td>sql_retry_interval</td>
      <td>database/retry_interval</td>
    </tr>
    <tr>
      <td>sql_idle_timeout</td>
      <td>database/idle_timeout</td>
    </tr>
    <tr>
      <td>container_formats</td>
      <td>image_format/container_formats</td>
    </tr>
  </table>
</section>
