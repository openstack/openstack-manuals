<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="heat-conf-changes-icehouse">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options for heat</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>engine_life_check_timeout = 2</td>
      <td>(IntOpt) RPC timeout for the engine liveness check that is used for stack locking.</td>
    </tr>
    <tr>
      <td>keystone_backend = heat.common.heat_keystoneclient.KeystoneClientV3</td>
      <td>(StrOpt) Fully qualified class name to use as a keystone backend.</td>
    </tr>
    <tr>
      <td>log_config_append = None</td>
      <td>(StrOpt) The name of logging configuration file. It does not disable existing loggers, but just appends specified logging configuration to any other existing logging options. Please see the Python logging module documentation for details on logging configuration files.</td>
    </tr>
    <tr>
      <td>onready = None</td>
      <td>(StrOpt) onready allows you to send a notification when the heat processes are ready to serve.  This is either a module with the notify() method or a shell command.  To enable notifications with systemd, one may use the 'systemd-notify --ready' shell command or the 'heat.common.systemd' notification module.</td>
    </tr>
    <tr>
      <td>region_name_for_services = None</td>
      <td>(StrOpt) Default region name used to get services endpoints.</td>
    </tr>
    <tr>
      <td>secure_proxy_ssl_header = X-Forwarded-Proto</td>
      <td>(StrOpt) The HTTP Header that will be used to determine which the original request protocol scheme was, even if it was removed by an SSL terminator proxy.</td>
    </tr>
    <tr>
      <td>stack_action_timeout = 3600</td>
      <td>(IntOpt) Timeout in seconds for stack action (ie. create or update).</td>
    </tr>
    <tr>
      <td>stack_domain_admin = None</td>
      <td>(StrOpt) Keystone username, a user with roles sufficient to manage users and projects in the stack_user_domain.</td>
    </tr>
    <tr>
      <td>stack_domain_admin_password = None</td>
      <td>(StrOpt) Keystone password for stack_domain_admin user.</td>
    </tr>
    <tr>
      <td>stack_user_domain = None</td>
      <td>(StrOpt) Keystone domain ID which contains heat template-defined users.</td>
    </tr>
    <tr>
      <td>clients/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_ceilometer/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_ceilometer/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_ceilometer/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_ceilometer/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_ceilometer/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_cinder/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_cinder/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_cinder/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_cinder/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_cinder/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_heat/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_heat/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_heat/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_heat/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_heat/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_heat/url = None</td>
      <td>(StrOpt) Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s.</td>
    </tr>
    <tr>
      <td>clients_keystone/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_keystone/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_keystone/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_keystone/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_keystone/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_neutron/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_neutron/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_neutron/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_neutron/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_neutron/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_nova/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_nova/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_nova/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_nova/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_nova/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_swift/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_swift/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_swift/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_swift/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_swift/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>clients_trove/ca_file = None</td>
      <td>(StrOpt) Optional CA cert file to use in SSL connections.</td>
    </tr>
    <tr>
      <td>clients_trove/cert_file = None</td>
      <td>(StrOpt) Optional PEM-formatted certificate chain file.</td>
    </tr>
    <tr>
      <td>clients_trove/endpoint_type = publicURL</td>
      <td>(StrOpt) Type of endpoint in Identity service catalog to use for communication with the OpenStack service.</td>
    </tr>
    <tr>
      <td>clients_trove/insecure = False</td>
      <td>(BoolOpt) If set, then the server's certificate will not be verified.</td>
    </tr>
    <tr>
      <td>clients_trove/key_file = None</td>
      <td>(StrOpt) Optional PEM-formatted file that contains the private key.</td>
    </tr>
    <tr>
      <td>revision/heat_revision = unknown</td>
      <td>(StrOpt) Heat build revision. If you would prefer to manage your build revision separately, you can move this section to a different file and add it as another config option.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>allowed_rpc_exception_modules</td>
      <td>heat.openstack.common.exception, heat.common.exception, nova.exception, cinder.exception, exceptions</td>
      <td>nova.exception, cinder.exception, exceptions</td>
    </tr>
    <tr>
      <td>cloud_backend</td>
      <td>None</td>
      <td>heat.engine.clients.OpenStackClients</td>
    </tr>
    <tr>
      <td>control_exchange</td>
      <td>openstack</td>
      <td>heat</td>
    </tr>
    <tr>
      <td>default_log_levels</td>
      <td>amqplib=WARN, sqlalchemy=WARN, boto=WARN, suds=INFO, keystone=INFO, eventlet.wsgi.server=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, iso8601=WARN</td>
    </tr>
    <tr>
      <td>logging_context_format_string</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s</td>
      <td>%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>db_backend</td>
      <td>database/backend</td>
    </tr>
    <tr>
      <td>log_config</td>
      <td>log_config_append</td>
    </tr>
    <tr>
      <td>sql_connection</td>
      <td>database/connection</td>
    </tr>
    <tr>
      <td>sql_idle_timeout</td>
      <td>database/idle_timeout</td>
    </tr>
  </table>
</section>
