<?xml version='1.0' encoding='UTF-8'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="nova-conf-changes-icehouse">
  <!-- Warning: Do not edit this file. It is automatically generated and your changes will be overwritten. The tool to do so lives in the openstack-doc-tools repository. -->
  <title>New, updated and deprecated options for nova</title>
  <table>
    <caption>New options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Option = default value</td>
        <td>(Type) Help string</td>
      </tr>
    </thead>
    <tr>
      <td>aggregate_image_properties_isolation_namespace = None</td>
      <td>(StrOpt) Force the filter to consider only keys matching the given namespace.</td>
    </tr>
    <tr>
      <td>aggregate_image_properties_isolation_separator = .</td>
      <td>(StrOpt) The separator used between the namespace and keys</td>
    </tr>
    <tr>
      <td>compute_available_monitors = ['nova.compute.monitors.all_monitors']</td>
      <td>(MultiStrOpt) Monitor classes available to the compute which may be specified more than once.</td>
    </tr>
    <tr>
      <td>compute_monitors = []</td>
      <td>(ListOpt) A list of monitors that can be used for getting compute metrics.</td>
    </tr>
    <tr>
      <td>image_cache_subdirectory_name = _base</td>
      <td>(StrOpt) Where cached images are stored under $instances_path. This is NOT the full path - just a folder name. For per-compute-host cached images, set to _base_$my_ip</td>
    </tr>
    <tr>
      <td>image_handlers = ['download']</td>
      <td>(ListOpt) Specifies which image handler extension names to use for handling images. The first extension in the list which can handle the image with a suitable location will be used.</td>
    </tr>
    <tr>
      <td>kombu_reconnect_delay = 1.0</td>
      <td>(FloatOpt) How long to wait before reconnecting in response to an AMQP consumer cancel notification.</td>
    </tr>
    <tr>
      <td>log_config_append = None</td>
      <td>(StrOpt) The name of logging configuration file. It does not disable existing loggers, but just appends specified logging configuration to any other existing logging options. Please see the Python logging module documentation for details on logging configuration files.</td>
    </tr>
    <tr>
      <td>max_header_line = 16384</td>
      <td>(IntOpt) Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those generated by the Keystone v3 API with big service catalogs).</td>
    </tr>
    <tr>
      <td>neutron_admin_tenant_id = None</td>
      <td>(StrOpt) Tenant id for connecting to neutron in admin context</td>
    </tr>
    <tr>
      <td>ovs_vsctl_timeout = 120</td>
      <td>(IntOpt) Amount of time, in seconds, that ovs_vsctl should wait for a response from the database. 0 is to wait forever.</td>
    </tr>
    <tr>
      <td>password = None</td>
      <td>(StrOpt) Password for Redis server (optional).</td>
    </tr>
    <tr>
      <td>port = 6379</td>
      <td>(IntOpt) Use this port to connect to redis host.</td>
    </tr>
    <tr>
      <td>rabbit_login_method = AMQPLAIN</td>
      <td>(StrOpt) the RabbitMQ login method</td>
    </tr>
    <tr>
      <td>scheduler_driver_task_period = 60</td>
      <td>(IntOpt) How often (in seconds) to run periodic tasks in the scheduler driver of your choice. Please note this is likely to interact with the value of service_down_time, but exactly how they interact will depend on your choice of scheduler driver.</td>
    </tr>
    <tr>
      <td>transport_url = None</td>
      <td>(StrOpt) A URL representing the messaging driver to use and its full configuration. If not set, we fall back to the rpc_backend option and driver specific configuration.</td>
    </tr>
    <tr>
      <td>use_syslog_rfc_format = False</td>
      <td>(BoolOpt) (Optional) Use syslog rfc5424 format for logging. If enabled, will add APP-NAME (RFC5424) before the MSG part of the syslog message.  The old format without APP-NAME is deprecated in I, and will be removed in J.</td>
    </tr>
    <tr>
      <td>vif_plugging_is_fatal = True</td>
      <td>(BoolOpt) Fail instance boot if vif plugging fails</td>
    </tr>
    <tr>
      <td>vif_plugging_timeout = 300</td>
      <td>(IntOpt) Number of seconds to wait for neutron vif plugging events to arrive before continuing or failing (see vif_plugging_is_fatal). If this is set to zero and vif_plugging_is_fatal is False, events should not be expected to arrive at all.</td>
    </tr>
    <tr>
      <td>wsgi_default_pool_size = 1000</td>
      <td>(IntOpt) Size of the pool of greenthreads used by wsgi</td>
    </tr>
    <tr>
      <td>baremetal/flavor_extra_specs = []</td>
      <td>(ListOpt) A list of additional capabilities corresponding to flavor_extra_specs for this compute host to advertise. Valid entries are name=value, pairs For example, "key1:val1, key2:val2"</td>
    </tr>
    <tr>
      <td>baremetal/use_file_injection = False</td>
      <td>(BoolOpt) If True, enable file injection for network info, files and admin password</td>
    </tr>
    <tr>
      <td>cells/offset_weight_multiplier = 1.0</td>
      <td>(FloatOpt) Multiplier used to weigh offset weigher.</td>
    </tr>
    <tr>
      <td>database/db_inc_retry_interval = True</td>
      <td>(BoolOpt) Whether to increase interval between db connection retries, up to db_max_retry_interval</td>
    </tr>
    <tr>
      <td>database/db_max_retries = 20</td>
      <td>(IntOpt) maximum db connection retries before error is raised. (setting -1 implies an infinite retry count)</td>
    </tr>
    <tr>
      <td>database/db_max_retry_interval = 10</td>
      <td>(IntOpt) max seconds between db connection retries, if db_inc_retry_interval is enabled</td>
    </tr>
    <tr>
      <td>database/db_retry_interval = 1</td>
      <td>(IntOpt) seconds between db connection retries</td>
    </tr>
    <tr>
      <td>database/mysql_sql_mode = None</td>
      <td>(StrOpt) The SQL mode to be used for MySQL sessions (default is empty, meaning do not override any server-side SQL mode setting)</td>
    </tr>
    <tr>
      <td>database/sqlite_db = nova.sqlite</td>
      <td>(StrOpt) The file name to use with SQLite</td>
    </tr>
    <tr>
      <td>database/sqlite_synchronous = True</td>
      <td>(BoolOpt) If True, SQLite uses synchronous mode</td>
    </tr>
    <tr>
      <td>database/use_db_reconnect = False</td>
      <td>(BoolOpt) Enable the experimental use of database reconnect on connection lost</td>
    </tr>
    <tr>
      <td>libvirt/block_migration_flag = VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_NON_SHARED_INC</td>
      <td>(StrOpt) Migration flags to be set for block migration</td>
    </tr>
    <tr>
      <td>libvirt/checksum_base_images = False</td>
      <td>(BoolOpt) Write a checksum for files in _base to disk</td>
    </tr>
    <tr>
      <td>libvirt/checksum_interval_seconds = 3600</td>
      <td>(IntOpt) How frequently to checksum base images</td>
    </tr>
    <tr>
      <td>libvirt/connection_uri = </td>
      <td>(StrOpt) Override the default libvirt URI (which is dependent on virt_type)</td>
    </tr>
    <tr>
      <td>libvirt/cpu_mode = None</td>
      <td>(StrOpt) Set to "host-model" to clone the host CPU feature flags; to "host-passthrough" to use the host CPU model exactly; to "custom" to use a named CPU model; to "none" to not set any CPU model. If virt_type="kvm|qemu", it will default to "host-model", otherwise it will default to "none"</td>
    </tr>
    <tr>
      <td>libvirt/cpu_model = None</td>
      <td>(StrOpt) Set to a named libvirt CPU model (see names listed in /usr/share/libvirt/cpu_map.xml). Only has effect if cpu_mode="custom" and virt_type="kvm|qemu"</td>
    </tr>
    <tr>
      <td>libvirt/disk_cachemodes = []</td>
      <td>(ListOpt) Specific cachemodes to use for different disk types e.g: file=directsync,block=none</td>
    </tr>
    <tr>
      <td>libvirt/disk_prefix = None</td>
      <td>(StrOpt) Override the default disk prefix for the devices attached to a server, which is dependent on virt_type. (valid options are: sd, xvd, uvd, vd)</td>
    </tr>
    <tr>
      <td>libvirt/glusterfs_mount_point_base = $state_path/mnt</td>
      <td>(StrOpt) Directory where the glusterfs volume is mounted on the compute node</td>
    </tr>
    <tr>
      <td>libvirt/image_info_filename_pattern = $instances_path/$image_cache_subdirectory_name/%(image)s.info</td>
      <td>(StrOpt) Allows image information files to be stored in non-standard locations</td>
    </tr>
    <tr>
      <td>libvirt/images_rbd_ceph_conf = </td>
      <td>(StrOpt) Path to the ceph configuration file to use</td>
    </tr>
    <tr>
      <td>libvirt/images_rbd_pool = rbd</td>
      <td>(StrOpt) The RADOS pool in which rbd volumes are stored</td>
    </tr>
    <tr>
      <td>libvirt/images_type = default</td>
      <td>(StrOpt) VM Images format. Acceptable values are: raw, qcow2, lvm, rbd, default. If default is specified, then use_cow_images flag is used instead of this one.</td>
    </tr>
    <tr>
      <td>libvirt/images_volume_group = None</td>
      <td>(StrOpt) LVM Volume Group that is used for VM images, when you specify images_type=lvm.</td>
    </tr>
    <tr>
      <td>libvirt/inject_key = False</td>
      <td>(BoolOpt) Inject the ssh public key at boot time</td>
    </tr>
    <tr>
      <td>libvirt/inject_partition = -2</td>
      <td>(IntOpt) The partition to inject to : -2 =&gt; disable, -1 =&gt; inspect (libguestfs only), 0 =&gt; not partitioned, &gt;0 =&gt; partition number</td>
    </tr>
    <tr>
      <td>libvirt/inject_password = False</td>
      <td>(BoolOpt) Inject the admin password at boot time, without an agent.</td>
    </tr>
    <tr>
      <td>libvirt/iscsi_use_multipath = False</td>
      <td>(BoolOpt) Use multipath connection of the iSCSI volume</td>
    </tr>
    <tr>
      <td>libvirt/iser_use_multipath = False</td>
      <td>(BoolOpt) Use multipath connection of the iSER volume</td>
    </tr>
    <tr>
      <td>libvirt/live_migration_bandwidth = 0</td>
      <td>(IntOpt) Maximum bandwidth to be used during migration, in Mbps</td>
    </tr>
    <tr>
      <td>libvirt/live_migration_flag = VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER</td>
      <td>(StrOpt) Migration flags to be set for live migration</td>
    </tr>
    <tr>
      <td>libvirt/live_migration_uri = qemu+tcp://%s/system</td>
      <td>(StrOpt) Migration target URI (any included "%s" is replaced with the migration target hostname)</td>
    </tr>
    <tr>
      <td>libvirt/nfs_mount_options = None</td>
      <td>(StrOpt) Mount options passedf to the NFS client. See section of the nfs man page for details</td>
    </tr>
    <tr>
      <td>libvirt/nfs_mount_point_base = $state_path/mnt</td>
      <td>(StrOpt) Directory where the NFS volume is mounted on the compute node</td>
    </tr>
    <tr>
      <td>libvirt/num_aoe_discover_tries = 3</td>
      <td>(IntOpt) Number of times to rediscover AoE target to find volume</td>
    </tr>
    <tr>
      <td>libvirt/num_iscsi_scan_tries = 5</td>
      <td>(IntOpt) Number of times to rescan iSCSI target to find volume</td>
    </tr>
    <tr>
      <td>libvirt/num_iser_scan_tries = 5</td>
      <td>(IntOpt) Number of times to rescan iSER target to find volume</td>
    </tr>
    <tr>
      <td>libvirt/qemu_allowed_storage_drivers = []</td>
      <td>(ListOpt) Protocols listed here will be accessed directly from QEMU. Currently supported protocols: [gluster]</td>
    </tr>
    <tr>
      <td>libvirt/rbd_secret_uuid = None</td>
      <td>(StrOpt) The libvirt UUID of the secret for the rbd_uservolumes</td>
    </tr>
    <tr>
      <td>libvirt/rbd_user = None</td>
      <td>(StrOpt) The RADOS client name for accessing rbd volumes</td>
    </tr>
    <tr>
      <td>libvirt/remove_unused_kernels = False</td>
      <td>(BoolOpt) Should unused kernel images be removed? This is only safe to enable if all compute nodes have been updated to support this option. This will be enabled by default in future.</td>
    </tr>
    <tr>
      <td>libvirt/remove_unused_resized_minimum_age_seconds = 3600</td>
      <td>(IntOpt) Unused resized base images younger than this will not be removed</td>
    </tr>
    <tr>
      <td>libvirt/rescue_image_id = None</td>
      <td>(StrOpt) Rescue ami image</td>
    </tr>
    <tr>
      <td>libvirt/rescue_kernel_id = None</td>
      <td>(StrOpt) Rescue aki image</td>
    </tr>
    <tr>
      <td>libvirt/rescue_ramdisk_id = None</td>
      <td>(StrOpt) Rescue ari image</td>
    </tr>
    <tr>
      <td>libvirt/rng_dev_path = None</td>
      <td>(StrOpt) A path to a device that will be used as source of entropy on the host. Permitted options are: /dev/random or /dev/hwrng</td>
    </tr>
    <tr>
      <td>libvirt/scality_sofs_config = None</td>
      <td>(StrOpt) Path or URL to Scality SOFS configuration file</td>
    </tr>
    <tr>
      <td>libvirt/scality_sofs_mount_point = $state_path/scality</td>
      <td>(StrOpt) Base dir where Scality SOFS shall be mounted</td>
    </tr>
    <tr>
      <td>libvirt/snapshot_compression = False</td>
      <td>(BoolOpt) Compress snapshot images when possible. This currently applies exclusively to qcow2 images</td>
    </tr>
    <tr>
      <td>libvirt/snapshot_image_format = None</td>
      <td>(StrOpt) Snapshot image format (valid options are : raw, qcow2, vmdk, vdi). Defaults to same as source image</td>
    </tr>
    <tr>
      <td>libvirt/snapshots_directory = $instances_path/snapshots</td>
      <td>(StrOpt) Location where libvirt driver will store snapshots before uploading them to image service</td>
    </tr>
    <tr>
      <td>libvirt/sparse_logical_volumes = False</td>
      <td>(BoolOpt) Create sparse logical volumes (with virtualsize) if this flag is set to True.</td>
    </tr>
    <tr>
      <td>libvirt/use_usb_tablet = True</td>
      <td>(BoolOpt) Sync virtual and real mouse cursors in Windows VMs</td>
    </tr>
    <tr>
      <td>libvirt/use_virtio_for_bridges = True</td>
      <td>(BoolOpt) Use virtio for bridge interfaces with KVM/QEMU</td>
    </tr>
    <tr>
      <td>libvirt/vif_driver = nova.virt.libvirt.vif.LibvirtGenericVIFDriver</td>
      <td>(StrOpt) DEPRECATED. The libvirt VIF driver to configure the VIFs.This option is deprecated and will be removed in the Juno release.</td>
    </tr>
    <tr>
      <td>libvirt/virt_type = kvm</td>
      <td>(StrOpt) Libvirt domain type (valid options are: kvm, lxc, qemu, uml, xen)</td>
    </tr>
    <tr>
      <td>libvirt/volume_clear = zero</td>
      <td>(StrOpt) Method used to wipe old volumes (valid options are: none, zero, shred)</td>
    </tr>
    <tr>
      <td>libvirt/volume_clear_size = 0</td>
      <td>(IntOpt) Size in MiB to wipe at start of old volumes. 0 =&gt; all</td>
    </tr>
    <tr>
      <td>libvirt/volume_drivers = ['iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver', 'iser=nova.virt.libvirt.volume.LibvirtISERVolumeDriver', 'local=nova.virt.libvirt.volume.LibvirtVolumeDriver', 'fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver', 'rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver', 'sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver', 'nfs=nova.virt.libvirt.volume.LibvirtNFSVolumeDriver', 'aoe=nova.virt.libvirt.volume.LibvirtAOEVolumeDriver', 'glusterfs=nova.virt.libvirt.volume.LibvirtGlusterfsVolumeDriver', 'fibre_channel=nova.virt.libvirt.volume.LibvirtFibreChannelVolumeDriver', 'scality=nova.virt.libvirt.volume.LibvirtScalityVolumeDriver']</td>
      <td>(ListOpt) Libvirt handlers for remote volumes.</td>
    </tr>
    <tr>
      <td>libvirt/wait_soft_reboot_seconds = 120</td>
      <td>(IntOpt) Number of seconds to wait for instance to shut down after soft reboot request is made. We fall back to hard reboot if instance does not shutdown within this window.</td>
    </tr>
    <tr>
      <td>libvirt/xen_hvmloader_path = /usr/lib/xen/boot/hvmloader</td>
      <td>(StrOpt) Location where the Xen hvmloader is kept</td>
    </tr>
    <tr>
      <td>metrics/required = True</td>
      <td>(BoolOpt) How to treat the unavailable metrics. When a metric is NOT available for a host, if it is set to be True, it would raise an exception, so it is recommended to use the scheduler filter MetricFilter to filter out those hosts. If it is set to be False, the unavailable metric would be treated as a negative factor in weighing process, the returned value would be set by the option weight_of_unavailable.</td>
    </tr>
    <tr>
      <td>metrics/weight_multiplier = 1.0</td>
      <td>(FloatOpt) Multiplier used for weighing metrics.</td>
    </tr>
    <tr>
      <td>metrics/weight_of_unavailable = -10000.0</td>
      <td>(FloatOpt) The final weight value to be returned if required is set to False and any one of the metrics set by weight_setting is unavailable.</td>
    </tr>
    <tr>
      <td>metrics/weight_setting = []</td>
      <td>(ListOpt) How the metrics are going to be weighed. This should be in the form of "&lt;name1&gt;=&lt;ratio1&gt;, &lt;name2&gt;=&lt;ratio2&gt;, ...", where &lt;nameX&gt; is one of the metrics to be weighed, and &lt;ratioX&gt; is the corresponding ratio. So for "name1=1.0, name2=-1.0" The final weight would be name1.value * 1.0 + name2.value * -1.0.</td>
    </tr>
    <tr>
      <td>rdp/enabled = False</td>
      <td>(BoolOpt) Enable RDP related features</td>
    </tr>
    <tr>
      <td>rdp/html5_proxy_base_url = http://127.0.0.1:6083/</td>
      <td>(StrOpt) Location of RDP html5 console proxy, in the form "http://127.0.0.1:6083/"</td>
    </tr>
    <tr>
      <td>xenserver/agent_path = usr/sbin/xe-update-networking</td>
      <td>(StrOpt) Specifies the path in which the XenAPI guest agent should be located. If the agent is present, network configuration is not injected into the image. Used if compute_driver=xenapi.XenAPIDriver and flat_injected=True</td>
    </tr>
    <tr>
      <td>xenserver/agent_resetnetwork_timeout = 60</td>
      <td>(IntOpt) Number of seconds to wait for agent reply to resetnetwork request</td>
    </tr>
    <tr>
      <td>xenserver/agent_timeout = 30</td>
      <td>(IntOpt) Number of seconds to wait for agent reply</td>
    </tr>
    <tr>
      <td>xenserver/agent_version_timeout = 300</td>
      <td>(IntOpt) Number of seconds to wait for agent to be fully operational</td>
    </tr>
    <tr>
      <td>xenserver/block_device_creation_timeout = 10</td>
      <td>(IntOpt) Time to wait for a block device to be created</td>
    </tr>
    <tr>
      <td>xenserver/cache_images = all</td>
      <td>(StrOpt) Cache glance images locally. `all` will cache all images, `some` will only cache images that have the image_property `cache_in_nova=True`, and `none` turns off caching entirely</td>
    </tr>
    <tr>
      <td>xenserver/check_host = True</td>
      <td>(BoolOpt) Ensure compute service is running on host XenAPI connects to.</td>
    </tr>
    <tr>
      <td>xenserver/connection_concurrent = 5</td>
      <td>(IntOpt) Maximum number of concurrent XenAPI connections. Used only if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/connection_password = None</td>
      <td>(StrOpt) Password for connection to XenServer/Xen Cloud Platform. Used only if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/connection_url = None</td>
      <td>(StrOpt) URL for connection to XenServer/Xen Cloud Platform. A special value of unix://local can be used to connect to the local unix socket.  Required if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/connection_username = root</td>
      <td>(StrOpt) Username for connection to XenServer/Xen Cloud Platform. Used only if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/default_os_type = linux</td>
      <td>(StrOpt) Default OS type</td>
    </tr>
    <tr>
      <td>xenserver/disable_agent = False</td>
      <td>(BoolOpt) Disables the use of the XenAPI agent in any image regardless of what image properties are present.</td>
    </tr>
    <tr>
      <td>xenserver/image_compression_level = None</td>
      <td>(IntOpt) Compression level for images, e.g., 9 for gzip -9. Range is 1-9, 9 being most compressed but most CPU intensive on dom0.</td>
    </tr>
    <tr>
      <td>xenserver/image_upload_handler = nova.virt.xenapi.image.glance.GlanceStore</td>
      <td>(StrOpt) Dom0 plugin driver used to handle image uploads.</td>
    </tr>
    <tr>
      <td>xenserver/introduce_vdi_retry_wait = 20</td>
      <td>(IntOpt) Number of seconds to wait for an SR to settle if the VDI does not exist when first introduced</td>
    </tr>
    <tr>
      <td>xenserver/ipxe_boot_menu_url = None</td>
      <td>(StrOpt) URL to the iPXE boot menu</td>
    </tr>
    <tr>
      <td>xenserver/ipxe_mkisofs_cmd = mkisofs</td>
      <td>(StrOpt) Name and optionally path of the tool used for ISO image creation</td>
    </tr>
    <tr>
      <td>xenserver/ipxe_network_name = None</td>
      <td>(StrOpt) Name of network to use for booting iPXE ISOs</td>
    </tr>
    <tr>
      <td>xenserver/iqn_prefix = iqn.2010-10.org.openstack</td>
      <td>(StrOpt) IQN Prefix</td>
    </tr>
    <tr>
      <td>xenserver/login_timeout = 10</td>
      <td>(IntOpt) Timeout in seconds for XenAPI login.</td>
    </tr>
    <tr>
      <td>xenserver/max_kernel_ramdisk_size = 16777216</td>
      <td>(IntOpt) Maximum size in bytes of kernel or ramdisk images</td>
    </tr>
    <tr>
      <td>xenserver/num_vbd_unplug_retries = 10</td>
      <td>(IntOpt) Maximum number of retries to unplug VBD</td>
    </tr>
    <tr>
      <td>xenserver/ovs_integration_bridge = xapi1</td>
      <td>(StrOpt) Name of Integration Bridge used by Open vSwitch</td>
    </tr>
    <tr>
      <td>xenserver/remap_vbd_dev = False</td>
      <td>(BoolOpt) Used to enable the remapping of VBD dev (Works around an issue in Ubuntu Maverick)</td>
    </tr>
    <tr>
      <td>xenserver/remap_vbd_dev_prefix = sd</td>
      <td>(StrOpt) Specify prefix to remap VBD dev to (ex. /dev/xvdb -&gt; /dev/sdb)</td>
    </tr>
    <tr>
      <td>xenserver/running_timeout = 60</td>
      <td>(IntOpt) Number of seconds to wait for instance to go to running state</td>
    </tr>
    <tr>
      <td>xenserver/sparse_copy = True</td>
      <td>(BoolOpt) Whether to use sparse_copy for copying data on a resize down (False will use standard dd). This speeds up resizes down considerably since large runs of zeros won't have to be rsynced</td>
    </tr>
    <tr>
      <td>xenserver/sr_base_path = /var/run/sr-mount</td>
      <td>(StrOpt) Base path to the storage repository</td>
    </tr>
    <tr>
      <td>xenserver/sr_matching_filter = default-sr:true</td>
      <td>(StrOpt) Filter for finding the SR to be used to install guest instances on. To use the Local Storage in default XenServer/XCP installations set this flag to other-config:i18n-key=local-storage. To select an SR with a different matching criteria, you could set it to other-config:my_favorite_sr=true. On the other hand, to fall back on the Default SR, as displayed by XenCenter, set this flag to: default-sr:true</td>
    </tr>
    <tr>
      <td>xenserver/target_host = None</td>
      <td>(StrOpt) The iSCSI Target Host</td>
    </tr>
    <tr>
      <td>xenserver/target_port = 3260</td>
      <td>(StrOpt) The iSCSI Target Port, default is port 3260</td>
    </tr>
    <tr>
      <td>xenserver/torrent_base_url = None</td>
      <td>(StrOpt) Base URL for torrent files.</td>
    </tr>
    <tr>
      <td>xenserver/torrent_download_stall_cutoff = 600</td>
      <td>(IntOpt) Number of seconds a download can remain at the same progress percentage w/o being considered a stall</td>
    </tr>
    <tr>
      <td>xenserver/torrent_images = none</td>
      <td>(StrOpt) Whether or not to download images via Bit Torrent (all|some|none).</td>
    </tr>
    <tr>
      <td>xenserver/torrent_listen_port_end = 6891</td>
      <td>(IntOpt) End of port range to listen on</td>
    </tr>
    <tr>
      <td>xenserver/torrent_listen_port_start = 6881</td>
      <td>(IntOpt) Beginning of port range to listen on</td>
    </tr>
    <tr>
      <td>xenserver/torrent_max_last_accessed = 86400</td>
      <td>(IntOpt) Cached torrent files not accessed within this number of seconds can be reaped</td>
    </tr>
    <tr>
      <td>xenserver/torrent_max_seeder_processes_per_host = 1</td>
      <td>(IntOpt) Maximum number of seeder processes to run concurrently within a given dom0. (-1 = no limit)</td>
    </tr>
    <tr>
      <td>xenserver/torrent_seed_chance = 1.0</td>
      <td>(FloatOpt) Probability that peer will become a seeder. (1.0 = 100%)</td>
    </tr>
    <tr>
      <td>xenserver/torrent_seed_duration = 3600</td>
      <td>(IntOpt) Number of seconds after downloading an image via BitTorrent that it should be seeded for other peers.</td>
    </tr>
    <tr>
      <td>xenserver/use_agent_default = False</td>
      <td>(BoolOpt) Determines if the XenAPI agent should be used when the image used does not contain a hint to declare if the agent is present or not. The hint is a glance property "xenapi_use_agent" that has the value "True" or "False". Note that waiting for the agent when it is not present will significantly increase server boot times.</td>
    </tr>
    <tr>
      <td>xenserver/use_join_force = True</td>
      <td>(BoolOpt) To use for hosts with different CPUs</td>
    </tr>
    <tr>
      <td>xenserver/vhd_coalesce_max_attempts = 20</td>
      <td>(IntOpt) Max number of times to poll for VHD to coalesce. Used only if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/vhd_coalesce_poll_interval = 5.0</td>
      <td>(FloatOpt) The interval used for polling of coalescing vhds. Used only if compute_driver=xenapi.XenAPIDriver</td>
    </tr>
    <tr>
      <td>xenserver/vif_driver = nova.virt.xenapi.vif.XenAPIBridgeDriver</td>
      <td>(StrOpt) The XenAPI VIF driver using XenServer Network APIs.</td>
    </tr>
  </table>
  <table>
    <caption>New default values</caption>
    <col width="33%"/>
    <col width="33%"/>
    <col width="33%"/>
    <thead>
      <tr>
        <td>Option</td>
        <td>Previous default value</td>
        <td>New default value</td>
      </tr>
    </thead>
    <tr>
      <td>allowed_rpc_exception_modules</td>
      <td>nova.exception, cinder.exception, exceptions</td>
      <td>oslo.messaging.exceptions, nova.exception, cinder.exception, exceptions</td>
    </tr>
    <tr>
      <td>default_log_levels</td>
      <td>amqplib=WARN, sqlalchemy=WARN, boto=WARN, suds=INFO, keystone=INFO, eventlet.wsgi.server=WARN</td>
      <td>amqp=WARN, amqplib=WARN, boto=WARN, qpid=WARN, sqlalchemy=WARN, suds=INFO, oslo.messaging=INFO, iso8601=WARN</td>
    </tr>
    <tr>
      <td>rpc_backend</td>
      <td>nova.openstack.common.rpc.impl_kombu</td>
      <td>rabbit</td>
    </tr>
    <tr>
      <td>rpc_zmq_matchmaker</td>
      <td>nova.openstack.common.rpc.matchmaker.MatchMakerLocalhost</td>
      <td>oslo.messaging._drivers.matchmaker.MatchMakerLocalhost</td>
    </tr>
    <tr>
      <td>running_deleted_instance_action</td>
      <td>log</td>
      <td>reap</td>
    </tr>
    <tr>
      <td>scheduler_default_filters</td>
      <td>RetryFilter, AvailabilityZoneFilter, RamFilter, ComputeFilter, ComputeCapabilitiesFilter, ImagePropertiesFilter</td>
      <td>RetryFilter, AvailabilityZoneFilter, RamFilter, ComputeFilter, ComputeCapabilitiesFilter, ImagePropertiesFilter, ServerGroupAntiAffinityFilter, ServerGroupAffinityFilter</td>
    </tr>
    <tr>
      <td>virt_mkfs</td>
      <td>default=mkfs.ext3 -L %(fs_label)s -F %(target)s, linux=mkfs.ext3 -L %(fs_label)s -F %(target)s, windows=mkfs.ntfs --force --fast --label %(fs_label)s %(target)s</td>
      <td></td>
    </tr>
    <tr>
      <td>baremetal/sql_connection</td>
      <td>sqlite:///$state_path/baremetal_$sqlite_db</td>
      <td>sqlite:///$state_path/baremetal_nova.sqlite</td>
    </tr>
    <tr>
      <td>cells/cell_type</td>
      <td>None</td>
      <td>compute</td>
    </tr>
    <tr>
      <td>database/connection</td>
      <td>sqlite:////home/gauvain/sources/openstack/openstack-doc-tools/autogenerate_config_docs/sources/nova/nova/openstack/common/db/$sqlite_db</td>
      <td>None</td>
    </tr>
    <tr>
      <td>database/slave_connection</td>
      <td></td>
      <td>None</td>
    </tr>
    <tr>
      <td>vmware/task_poll_interval</td>
      <td>5.0</td>
      <td>0.5</td>
    </tr>
  </table>
  <table>
    <caption>Deprecated options</caption>
    <col width="50%"/>
    <col width="50%"/>
    <thead>
      <tr>
        <td>Deprecated option</td>
        <td>New Option</td>
      </tr>
    </thead>
    <tr>
      <td>max_kernel_ramdisk_size</td>
      <td>xenserver/max_kernel_ramdisk_size</td>
    </tr>
    <tr>
      <td>libvirt_type</td>
      <td>libvirt/virt_type</td>
    </tr>
    <tr>
      <td>xenapi_ipxe_network_name</td>
      <td>xenserver/ipxe_network_name</td>
    </tr>
    <tr>
      <td>xenapi_sr_base_path</td>
      <td>xenserver/sr_base_path</td>
    </tr>
    <tr>
      <td>libvirt_cpu_mode</td>
      <td>libvirt/cpu_mode</td>
    </tr>
    <tr>
      <td>xenapi_torrent_seed_chance</td>
      <td>xenserver/torrent_seed_chance</td>
    </tr>
    <tr>
      <td>xenapi_torrent_max_last_accessed</td>
      <td>xenserver/torrent_max_last_accessed</td>
    </tr>
    <tr>
      <td>xenapi_connection_username</td>
      <td>xenserver/connection_username</td>
    </tr>
    <tr>
      <td>libvirt_volume_drivers</td>
      <td>libvirt/volume_drivers</td>
    </tr>
    <tr>
      <td>libvirt_uri</td>
      <td>libvirt/connection_uri</td>
    </tr>
    <tr>
      <td>xenapi_check_host</td>
      <td>xenserver/check_host</td>
    </tr>
    <tr>
      <td>libvirt_inject_password</td>
      <td>libvirt/inject_password</td>
    </tr>
    <tr>
      <td>xenapi_disable_agent</td>
      <td>xenserver/disable_agent</td>
    </tr>
    <tr>
      <td>xenapi_connection_password</td>
      <td>xenserver/connection_password</td>
    </tr>
    <tr>
      <td>xenapi_torrent_max_seeder_processes_per_host</td>
      <td>xenserver/torrent_max_seeder_processes_per_host</td>
    </tr>
    <tr>
      <td>xenapi_torrent_listen_port_end</td>
      <td>xenserver/torrent_listen_port_end</td>
    </tr>
    <tr>
      <td>libvirt_wait_soft_reboot_seconds</td>
      <td>libvirt/wait_soft_reboot_seconds</td>
    </tr>
    <tr>
      <td>libvirt_iscsi_use_multipath</td>
      <td>libvirt/iscsi_use_multipath</td>
    </tr>
    <tr>
      <td>libvirt_inject_key</td>
      <td>libvirt/inject_key</td>
    </tr>
    <tr>
      <td>libvirt_inject_partition</td>
      <td>libvirt/inject_partition</td>
    </tr>
    <tr>
      <td>xenapi_vhd_coalesce_max_attempts</td>
      <td>xenserver/vhd_coalesce_max_attempts</td>
    </tr>
    <tr>
      <td>xenapi_use_agent_default</td>
      <td>xenserver/use_agent_default</td>
    </tr>
    <tr>
      <td>libvirt_disk_prefix</td>
      <td>libvirt/disk_prefix</td>
    </tr>
    <tr>
      <td>libvirt_sparse_logical_volumes</td>
      <td>libvirt/sparse_logical_volumes</td>
    </tr>
    <tr>
      <td>libvirt_images_volume_group</td>
      <td>libvirt/images_volume_group</td>
    </tr>
    <tr>
      <td>libvirt_images_rbd_pool</td>
      <td>libvirt/images_rbd_pool</td>
    </tr>
    <tr>
      <td>xenapi_remap_vbd_dev_prefix</td>
      <td>xenserver/remap_vbd_dev_prefix</td>
    </tr>
    <tr>
      <td>base_dir_name</td>
      <td>image_cache_subdirectory_name</td>
    </tr>
    <tr>
      <td>xenapi_torrent_download_stall_cutoff</td>
      <td>xenserver/torrent_download_stall_cutoff</td>
    </tr>
    <tr>
      <td>xenapi_ipxe_boot_menu_url</td>
      <td>xenserver/ipxe_boot_menu_url</td>
    </tr>
    <tr>
      <td>sr_matching_filter</td>
      <td>xenserver/sr_matching_filter</td>
    </tr>
    <tr>
      <td>log_config</td>
      <td>log_config_append</td>
    </tr>
    <tr>
      <td>libvirt_snapshots_directory</td>
      <td>libvirt/snapshots_directory</td>
    </tr>
    <tr>
      <td>libvirt_iser_use_multipath</td>
      <td>libvirt/iser_use_multipath</td>
    </tr>
    <tr>
      <td>libvirt_cpu_model</td>
      <td>libvirt/cpu_model</td>
    </tr>
    <tr>
      <td>agent_timeout</td>
      <td>xenserver/agent_timeout</td>
    </tr>
    <tr>
      <td>block_device_creation_timeout</td>
      <td>xenserver/block_device_creation_timeout</td>
    </tr>
    <tr>
      <td>rpc_notifier2/topics</td>
      <td>notification_topics</td>
    </tr>
    <tr>
      <td>xenapi_ipxe_mkisofs_cmd</td>
      <td>xenserver/ipxe_mkisofs_cmd</td>
    </tr>
    <tr>
      <td>xenapi_sparse_copy</td>
      <td>xenserver/sparse_copy</td>
    </tr>
    <tr>
      <td>use_join_force</td>
      <td>xenserver/use_join_force</td>
    </tr>
    <tr>
      <td>libvirt_snapshot_compression</td>
      <td>libvirt/snapshot_compression</td>
    </tr>
    <tr>
      <td>xenapi_num_vbd_unplug_retries</td>
      <td>xenserver/num_vbd_unplug_retries</td>
    </tr>
    <tr>
      <td>target_port</td>
      <td>xenserver/target_port</td>
    </tr>
    <tr>
      <td>xenapi_login_timeout</td>
      <td>xenserver/login_timeout</td>
    </tr>
    <tr>
      <td>xenapi_remap_vbd_dev</td>
      <td>xenserver/remap_vbd_dev</td>
    </tr>
    <tr>
      <td>xenapi_torrent_listen_port_start</td>
      <td>xenserver/torrent_listen_port_start</td>
    </tr>
    <tr>
      <td>xenapi_connection_concurrent</td>
      <td>xenserver/connection_concurrent</td>
    </tr>
    <tr>
      <td>xenapi_vif_driver</td>
      <td>xenserver/vif_driver</td>
    </tr>
    <tr>
      <td>xenapi_torrent_base_url</td>
      <td>xenserver/torrent_base_url</td>
    </tr>
    <tr>
      <td>xenapi_ovs_integration_bridge</td>
      <td>xenserver/ovs_integration_bridge</td>
    </tr>
    <tr>
      <td>xenapi_connection_url</td>
      <td>xenserver/connection_url</td>
    </tr>
    <tr>
      <td>agent_version_timeout</td>
      <td>xenserver/agent_version_timeout</td>
    </tr>
    <tr>
      <td>xenapi_running_timeout</td>
      <td>xenserver/running_timeout</td>
    </tr>
    <tr>
      <td>target_host</td>
      <td>xenserver/target_host</td>
    </tr>
    <tr>
      <td>xenapi_agent_path</td>
      <td>xenserver/agent_path</td>
    </tr>
    <tr>
      <td>xenapi_vhd_coalesce_poll_interval</td>
      <td>xenserver/vhd_coalesce_poll_interval</td>
    </tr>
    <tr>
      <td>iqn_prefix</td>
      <td>xenserver/iqn_prefix</td>
    </tr>
    <tr>
      <td>libvirt_images_type</td>
      <td>libvirt/images_type</td>
    </tr>
    <tr>
      <td>xenapi_torrent_images</td>
      <td>xenserver/torrent_images</td>
    </tr>
    <tr>
      <td>xenapi_image_upload_handler</td>
      <td>xenserver/image_upload_handler</td>
    </tr>
    <tr>
      <td>xenapi_torrent_seed_duration</td>
      <td>xenserver/torrent_seed_duration</td>
    </tr>
    <tr>
      <td>libvirt_use_virtio_for_bridges</td>
      <td>libvirt/use_virtio_for_bridges</td>
    </tr>
    <tr>
      <td>cache_images</td>
      <td>xenserver/cache_images</td>
    </tr>
    <tr>
      <td>libvirt_vif_driver</td>
      <td>libvirt/vif_driver</td>
    </tr>
    <tr>
      <td>agent_resetnetwork_timeout</td>
      <td>xenserver/agent_resetnetwork_timeout</td>
    </tr>
    <tr>
      <td>xenapi_image_compression_level</td>
      <td>xenserver/image_compression_level</td>
    </tr>
    <tr>
      <td>libvirt_images_rbd_ceph_conf</td>
      <td>libvirt/images_rbd_ceph_conf</td>
    </tr>
    <tr>
      <td>default_os_type</td>
      <td>xenserver/default_os_type</td>
    </tr>
  </table>
</section>
