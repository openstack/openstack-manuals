<section xml:id="section_networking-arch"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
  <title>Networking architecture</title>
  <para>Before you deploy Networking, it's useful to understand the
      Networking services and how they interact with the OpenStack
     components.</para>
     <section xml:id="arch_overview">
       <title>Overview</title>
            <para>Networking is a standalone component in the OpenStack modular
            architecture. It's positioned alongside OpenStack components such
            as Compute, Image Service, Identity, or the Dashboard. Like
            those components, a deployment of Networking often involves
            deploying several services to a variety of hosts.</para>
            <para>The Networking server uses the <systemitem class="service"
                >neutron-server</systemitem> daemon to expose the Networking
                API and enable administration of the configured Networking
                plug-in. Typically, the plug-in requires access to a database
                for persistent storage (also similar to other OpenStack
                services).</para>
            <para>If your deployment uses a controller host to run centralized
            Compute components, you can deploy the Networking server to that
            same host. However, Networking is entirely standalone and can be
            deployed to a dedicated host. Depending on your configuration,
            Networking can also include the following agents:</para>
            <para>
                <table rules="all">
                    <caption>Networking agents</caption>
                    <col width="30%"/>
                    <col width="70%"/>
                    <thead>
                        <tr>
                            <th>Agent</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="bold">plug-in
                                   agent</emphasis>
                                   (<literal>neutron-*-agent</literal>)</td>
                            <td>Runs on each hypervisor to perform local
                            vSwitch configuration. The agent that runs, depends
                            on the plug-in that you use. Certain plug-ins do not
                            require an agent.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">dhcp
                                   agent</emphasis>
                                   (<literal>neutron-dhcp-agent</literal>)</td>
                            <td>Provides DHCP services to tenant networks.
                            Required by certain plug-ins.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">l3
                                   agent</emphasis>
                                   (<literal>neutron-l3-agent</literal>)</td>
                            <td>Provides L3/NAT forwarding to provide external
                            network access for VMs on tenant networks. Required
                            by certain plug-ins.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">metering agent</emphasis>
                                    (<literal>neutron-metering-agent</literal>)</td>
                            <td>Provides L3 traffic metering for tenant networks.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>These agents interact with the main neutron process through
            RPC (for example, RabbitMQ or Qpid) or through the standard
            Networking API. In addition, Networking integrates with OpenStack
            components in a number of ways:</para>
            <itemizedlist>
                <listitem>
                    <para>Networking relies on the Identity service
                        (keystone) for the authentication and
                        authorization of all API requests.</para>
                </listitem>
                <listitem>
                    <para>Compute (nova) interacts with Networking
                        through calls to its standard API. As part of
                        creating a VM, the <systemitem class="service"
                            >nova-compute</systemitem> service
                        communicates with the Networking API to plug
                        each virtual NIC on the VM into a particular
                        network.</para>
                </listitem>
                <listitem>
                    <para>The dashboard (horizon) integrates with the
                        Networking API, enabling administrators and
                        tenant users to create and manage network
                        services through a web-based GUI.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="networking-services">
            <title>Place services on physical hosts</title>
            <para>Like other OpenStack services, Networking enables you to run
            services across multiple physical devices. It is also possible to
            run all service daemons on a single physical host for evaluation
            purposes. Alternatively, you can run each service on a dedicated
            physical host and replicate certain services across multiple hosts
            for redundancy purposes. For more information, see the <citetitle
                >OpenStack Configuration Reference</citetitle>.</para>
            <para>A standard architectural design includes a cloud controller
                host, a network gateway host, and a number of hypervisors
                for hosting virtual machines. The cloud controller and
                network gateway can be on the same host. However, if
                you expect VMs to send significant traffic to or from
                the Internet, a dedicated network gateway host helps
                avoid CPU contention between the <systemitem
                    class="service">neutron-l3-agent</systemitem> and
                other OpenStack services that forward packets.</para>
        </section>
        <section xml:id="network-connectivity">
            <title>Network connectivity for physical hosts</title>
            <mediaobject>
                <imageobject>
                    <imagedata scale="50"
                        fileref="../../common/figures/Neutron-PhysNet-Diagram.png"
                    />
                </imageobject>
            </mediaobject>
            <para>A standard Networking deployment includes one or more of the
            following physical networks:</para>

            <para>
                <table rules="all">
                    <caption>General distinct physical data center
                        networks</caption>
                    <col width="20%"/>
                    <col width="80%"/>
                    <thead>
                        <tr>
                            <th>Network</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="bold">Management
                                   network</emphasis></td>
                            <td>Provides internal communication between
                            OpenStack components. IP addresses on this network
                            should be reachable only within the data
                            center.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">Data
                                   network</emphasis></td>
                            <td>Provides VM data communication within
                                the cloud deployment. The IP
                                addressing requirements of this
                                network depend on the Networking
                                plug-in that is used.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">External
                                   network</emphasis></td>
                            <td>Provides VMs with Internet access in
                                some deployment scenarios. Anyone on
                                the Internet can reach IP addresses on
                                this network.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">API
                                   network</emphasis></td>
                            <td>Exposes all OpenStack APIs, including
                                the Networking API, to tenants. IP
                                addresses on this network should be
                                reachable by anyone on the
                                Internet. The API network might be the
                                same as the external network, because
                                it is possible to create an
                                external-network subnet that has
                                allocated IP ranges that use less than
                                the full range of IP addresses in an
                                IP block.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
        </section>
        <section xml:id="tenant-provider-networks">
    <title>Tenant and provider networks</title>
    <para>
        The following diagram presents an overview of the tenant and provider
        network types, and illustrates how they interact within the overall
        Networking topology:
    </para>
    <para>
    <figure>
    <title>Tenant and provider networks</title>
        <mediaobject>
                <imageobject>
                <imagedata scale="90"
                fileref="../../common/figures/NetworkTypes.png"/>
                </imageobject>
        </mediaobject>
    </figure>
    </para>
   <formalpara>
        <title>Tenant networks</title>
    <para>Users create tenant networks for connectivity within projects;
    they are fully isolated by default and are not shared with other projects.
    Networking supports a range of tenant network types:
    </para>
    </formalpara>
    <para>
        <variablelist>
            <varlistentry>
                <term>Flat</term>
                <listitem>
                    <para>All instances reside on the same network, which can
                    also be shared with the hosts. No VLAN tagging or other
                    network segregation takes place.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Local</term>
                <listitem>
                    <para>Instances reside on the local compute host and are
                        effectively isolated from any external networks.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>VLAN</term>
                <listitem>
                    <para>Networking allows users to create multiple provider
                    or tenant networks using VLAN IDs (802.1Q tagged) that
                    correspond to VLANs present in the physical network. This
                    allows instances to communicate with each other across
                    the environment. They can also communicate with dedicated
                    servers, firewalls, load balancers and other networking
                    infrastructure on the same layer 2 VLAN.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>VXLAN and GRE</term>
                <listitem>
                    <para>VXLAN and GRE use network overlays to support private
                    communication between instances. A Networking router is
                    required to enable traffic to traverse outside of the GRE or
                    VXLAN tenant network. A router is also required to connect
                    directly-connected tenant networks with external networks,
                    including the Internet; the router provides the ability to
                    connect to instances directly from an external network using
                    floating IP addresses.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </para>
    <formalpara>
    <title>Provider networks</title>
    <para>Provider networks are created by the OpenStack administrator and map
        directly to an existing physical network in the data center. Useful
        network types in this category are flat (untagged) and VLAN (802.1Q
        tagged). It is possible to allow provider networks to be shared among
        tenants as part of the network creation process.</para>
    </formalpara>
</section>
    <section xml:id="NSX_overview">
        <title>VMware NSX integration</title>
        <para>OpenStack Networking uses the NSX plugin for Networking to
        integrate with an existing VMware vCenter deployment. When installed on
        the network nodes, the NSX plugin enables a NSX controller to centrally
        manage configuration settings and push them to managed network nodes.
        Network nodes are considered managed when they're added as hypervisors
        to the NSX controller.</para>
        <para>The diagram below depicts an example NSX deployment and
        illustrates the route inter-VM traffic takes between separate Compute
        nodes. Note the placement of the VMware NSX plugin and the
        <systemitem class="service">neutron-server</systemitem> service on the
        network node. The NSX controller features centrally with a green line to
        the network node to indicate the management relationship:</para>
        <figure>
            <title>VMware NSX overview</title>
            <mediaobject>
                <imageobject>
                    <imagedata
                        fileref="../../common/figures/vmware_nsx.png"
                        format="PNG" contentwidth="6in"/>
                </imageobject>
            </mediaobject>
        </figure>
    </section>
</section>
