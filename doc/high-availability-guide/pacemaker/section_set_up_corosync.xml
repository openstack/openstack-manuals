      <section xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0" xml:id="_set_up_corosync">
        <info>
          <title>Set up Corosync</title>
        </info>
        <simpara>Besides installing the <literal>corosync</literal> package, you must also
create a configuration file, stored in
<literal>/etc/corosync/corosync.conf</literal>. Most distributions ship an example
configuration file (<literal>corosync.conf.example</literal>) as part of the
documentation bundled with the <literal>corosync</literal> package. An example Corosync
configuration file is shown below:</simpara>
        <formalpara>
          <info>
            <title>Corosync configuration file (<literal>corosync.conf</literal>)</title>
          </info>
          <para>
            <screen>totem {
        version: 2

        # Time (in ms) to wait for a token <co xml:id="CO1-1"/>
        token: 10000

        # How many token retransmits before forming a new
        # configuration
        token_retransmits_before_loss_const: 10

        # Turn off the virtual synchrony filter
        vsftype: none

        # Enable encryption <co xml:id="CO1-2"/>
        secauth: on

        # How many threads to use for encryption/decryption
        threads: 0

        # This specifies the redundant ring protocol, which may be
        # none, active, or passive. <co xml:id="CO1-3"/>
        rrp_mode: active

        # The following is a two-ring multicast configuration. <co xml:id="CO1-4"/>
        interface {
                ringnumber: 0
                bindnetaddr: 192.168.42.0
                mcastaddr: 239.255.42.1
                mcastport: 5405
        }
        interface {
                ringnumber: 1
                bindnetaddr: 10.0.42.0
                mcastaddr: 239.255.42.2
                mcastport: 5405
        }
}

amf {
        mode: disabled
}

service {
        # Load the Pacemaker Cluster Resource Manager <co xml:id="CO1-5"/>
        ver:       1
        name:      pacemaker
}

aisexec {
        user:   root
        group:  root
}

logging {
        fileline: off
        to_stderr: yes
        to_logfile: no
        to_syslog: yes
        syslog_facility: daemon
        debug: off
        timestamp: on
        logger_subsys {
                subsys: AMF
                debug: off
                tags: enter|leave|trace1|trace2|trace3|trace4|trace6
        }
}</screen>
          </para>
        </formalpara>
        <calloutlist>
          <callout arearefs="CO1-1">
            <para>
The <literal>token</literal> value specifies the time, in milliseconds, during
which the Corosync token is expected to be transmitted around the
ring. When this timeout expires, the token is declared lost, and after
<literal>token_retransmits_before_loss_const</literal> lost tokens the non-responding
<emphasis>processor</emphasis> (cluster node) is declared dead. In other words,
<literal>token</literal> Ã— <literal>token_retransmits_before_loss_const</literal> is the maximum
time a node is allowed to not respond to cluster messages before being
considered dead. The default for <literal>token</literal> is 1000 (1 second), with 4
allowed retransmits. These defaults are intended to minimize failover
times, but can cause frequent "false alarms" and unintended failovers
in case of short network interruptions. The values used here are
safer, albeit with slightly extended failover times.
</para>
          </callout>
          <callout arearefs="CO1-2">
            <para>
With <literal>secauth</literal> enabled, Corosync nodes mutually authenticate using
a 128-byte shared secret stored in <literal>/etc/corosync/authkey</literal>, which may
be generated with the <literal>corosync-keygen</literal> utility. When using <literal>secauth</literal>,
cluster communications are also encrypted.
</para>
          </callout>
          <callout arearefs="CO1-3">
            <para>
In Corosync configurations using redundant networking (with more
than one <literal>interface</literal>), you must select a Redundant Ring Protocol (RRP)
mode other than <literal>none</literal>. <literal>active</literal> is the recommended RRP mode.
</para>
          </callout>
          <callout arearefs="CO1-4">
            <para>
There are several things to note about the recommended interface
configuration:
</para>
            <itemizedlist>
              <listitem>
                <simpara>
The <literal>ringnumber</literal> must differ between all configured interfaces,
  starting with 0.
</simpara>
              </listitem>
              <listitem>
                <simpara>
The <literal>bindnetaddr</literal> is the <emphasis>network</emphasis> address of the interfaces to bind
  to. The example uses two network addresses of <literal>/24</literal> IPv4 subnets.
</simpara>
              </listitem>
              <listitem>
                <simpara>
Multicast groups (<literal>mcastaddr</literal>) <emphasis>must not</emphasis> be reused across cluster
  boundaries. In other words, no two distinct clusters should ever use
  the same multicast group. Be sure to select multicast addresses
  compliant with <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.ietf.org/rfc/rfc2365.txt">RFC 2365,
  "Administratively Scoped IP Multicast"</link>.
</simpara>
              </listitem>
              <listitem>
                <simpara>
For firewall configurations, note that Corosync communicates over
  UDP only, and uses <literal>mcastport</literal> (for receives) and <literal>mcastport</literal>-1 (for
  sends).
</simpara>
              </listitem>
            </itemizedlist>
          </callout>
          <callout arearefs="CO1-5">
            <para>
The <literal>service</literal> declaration for the <literal>pacemaker</literal> service may be
placed in the <literal>corosync.conf</literal> file directly, or in its own separate
file, <literal>/etc/corosync/service.d/pacemaker</literal>.
</para>
          </callout>
        </calloutlist>
        <simpara>Once created, the <literal>corosync.conf</literal> file (and the <literal>authkey</literal> file if the
<literal>secauth</literal> option is enabled) must be synchronized across all cluster
nodes.</simpara>
      </section>
