     <section xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0" xml:id="_configure_rabbitmq">
        <info>
          <title>Configure RabbitMQ</title>
        </info>
        <simpara>Here we are building a cluster of RabbitMQ nodes to construct a RabbitMQ broker.
Mirrored queues in RabbitMQ improve the availability of service since it will be resilient to failures.
We have to consider that while exchanges and bindings will survive the loss of individual nodes, queues
and their messages will not because a queue and its contents is located on one node. If we lose this node,
we also lose the queue.</simpara>
        <simpara>We consider that we run (at least) two RabbitMQ servers. To build a broker, we need to ensure that all nodes
have the same erlang cookie file. To do so, stop RabbitMQ everywhere and copy the cookie from rabbit1 server
to other server(s):</simpara>
        <screen>scp /var/lib/rabbitmq/.erlang.cookie \
root@rabbit2:/var/lib/rabbitmq/.erlang.cookie</screen>
        <simpara>Then, start RabbitMQ on nodes.
If RabbitMQ fails to start, you can’t continue to the next step.</simpara>
        <simpara>Now, we are building the HA cluster. From rabbit2, run these commands:</simpara>
        <screen>rabbitmqctl stop_app
rabbitmqctl join_cluster rabbit@rabbit1
rabbitmqctl start_app</screen>
        <simpara>To verify the cluster status :</simpara>
        <screen>rabbitmqctl cluster_status

Cluster status of node rabbit@rabbit2 ...
[{nodes,[{disc,[rabbit@rabbit1]},{ram,[rabbit@rabbit2]}]},{running_nodes,[rabbit@rabbit2,rabbit@rabbit1]}]</screen>
        <simpara>If the cluster is working, you can now proceed to creating users and passwords for queues.</simpara>
        <simpara>
          <emphasis role="strong">Note for RabbitMQ version 3</emphasis>
        </simpara>
        <simpara>Queue mirroring is no longer controlled by the <emphasis>x-ha-policy</emphasis> argument when declaring a queue. OpenStack can
continue to declare this argument, but it won’t cause queues to be mirrored.
We need to make sure that all queues (except those with auto-generated names) are mirrored across all running nodes:</simpara>
        <screen>rabbitmqctl set_policy HA '^(?!amq\.).*' '{"ha-mode": "all"}'</screen>
        <simpara>
          <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.rabbitmq.com/ha.html">More information about High availability in RabbitMQ</link>
        </simpara>
      </section>
